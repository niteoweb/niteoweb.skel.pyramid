[buildout]
extends = base.cfg
eggs +=
     iw.rotatezlogs

parts += 

# cacheing server
    varnish-build
    varnish-config
    varnish

# load balancer
    haproxy-build
    haproxy-conf

# appserver
    zeo
    zope1
    atconf1
    zope2
    atconf2
    zopedebug

# process monitor
    supervisor
    
# backups
    backup

# cronjobs
    crontab_reboot
    crontab_restart
    crontab_zeopack
    crontab_zodb_backup


# ===========================================
# Build and configure HAProxy load-balancer #
# ===========================================
[haproxy-build]
recipe = plone.recipe.haproxy
url = ${downloads:haproxy}

[haproxy-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/haproxy.conf.in
output = ${buildout:directory}/etc/haproxy.conf
maxconn = 24000
ulimit-n = 65536
user = ${config:shortname}
group = ${config:shortname}
bind = 127.0.0.1:${ports:haproxy}


# ===========================================
# Build and configure Varnish cacheing server
# ===========================================
[varnish-build]
recipe = zc.recipe.cmmi
url = ${downloads:varnish}

[varnish-config]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/varnish.vcl.in
output = ${buildout:directory}/etc/varnish.vcl

# misc template variables
backend-host = 127.0.0.1
backend-port = ${ports:haproxy}

[varnish]
recipe = plone.recipe.varnish
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
mode = foreground
config = ${varnish-config:output}
bind = 127.0.0.1:${ports:varnish}
cache-size = 1G


# ===========================================
# Build and configure Zope application server
# ===========================================
[zeo]
recipe = plone.recipe.zeoserver
blob-storage = ${buildout:directory}/var/blobstorage
zeo-address = ${ports:zeo}

[zope1]
recipe = plone.recipe.zope2instance
user = admin:admin
verbose-security = off
debug-mode = off
http-address = 127.0.0.1:${ports:zope1}
zeo-address = ${zeo:zeo-address}
zeo-client = on
shared-blob = on
eggs =
    ${buildout:eggs}
zserver-threads = 1
z2-log-level = CRITICAL
environment-vars =
    PTS_LANGUAGES en
    TZ Europe/Paris
mailinglogger = 
    <mailing-logger>
    level error
    flood-level 3
    smtp-server localhost
    from zope1@${config:hostname}
    to maintenance@niteoweb.com
    subject [${config:hostname} error] %(line)s
    </mailing-logger>
event-log-custom =
  %import iw.rotatezlogs
  <rotatelogfile>
    path ${buildout:directory}/var/log/zope1.log
    max-bytes 1MB
    backup-count 9
  </rotatelogfile>

[atconf1]
recipe                 = plone.recipe.atcontenttypes
zope-instance-location = ${zope1:location}
max-file-size          = ATImage:200kb
                         ATFile:2mb
                         ATNewsItem:100kb
max-image-dimension    = ATNewsItem:500,500
                         ATImage:1000,800
pil-quality            = 95


[zope2]
recipe = plone.recipe.zope2instance
user = admin:admin
verbose-security = ${zope1:verbose-security}
debug-mode = ${zope1:debug-mode}
http-address = 127.0.0.1:${ports:zope2}
zeo-address = ${zeo:zeo-address}
zeo-client = on
shared-blob = on
eggs =
    ${zope1:eggs}
zserver-threads = ${zope1:zserver-threads}
z2-log-level = ${zope1:z2-log-level}
environment-vars = ${zope1:environment-vars}
mailinglogger = 
    <mailing-logger>
    level error
    flood-level 3
    smtp-server localhost
    from zope2@${config:hostname}
    to maintenance@niteoweb.com
    subject [${config:hostname} error] %(line)s
    </mailing-logger>
event-log-custom =
  %import iw.rotatezlogs
  <rotatelogfile>
    path ${buildout:directory}/var/log/zope2.log
    max-bytes 1MB
    backup-count 9
  </rotatelogfile>

[atconf2]
recipe                 = plone.recipe.atcontenttypes
zope-instance-location = ${zope2:location}
max-file-size          = ${atconf1:max-file-size}
max-image-dimension    = ${atconf1:max-image-dimension}
pil-quality            = ${atconf1:pil-quality}


[zopedebug]
recipe = plone.recipe.zope2instance
user = admin:admin
verbose-security = on
debug-mode = on
http-address = 127.0.0.1:${ports:zopedebug}
zeo-address = ${zeo:zeo-address}
zeo-client = on
shared-blob = on
eggs =
    ${buildout:eggs}
    
    
# ========================================================
# Set up supervisor to run and supervise backend processes
# ========================================================
[supervisor]
recipe = collective.recipe.supervisor
port = 127.0.0.1:${ports:supervisor}
serverurl = http://127.0.0.1:${ports:supervisor}

programs =
    10 varnish ${buildout:directory}/bin/varnish true
    20 haproxy ${buildout:directory}/bin/haproxy [ -f ${buildout:directory}/etc/haproxy.conf -db ]
    30 zope1  ${buildout:directory}/bin/zope1 [console] true
    30 zope2  ${buildout:directory}/bin/zope2 [console] true
    40 zeo    ${zeo:location}/bin/runzeo true


# ==================
# Setup backup tools
# ==================
[backup] 
recipe = collective.recipe.backup
keep = 3


# ======================
# Configure Crontab jobs
# ======================

# on server reboot start supervisord which in turn starts all backend services
[crontab_reboot]
recipe = z3c.recipe.usercrontab
times = @reboot 
command = ${buildout:directory}/bin/supervisord

# restart Zope each Monday because of its memory leaks
[crontab_restart]
recipe = z3c.recipe.usercrontab
times = 0 6 * * 1 
command = ${buildout:directory}/bin/supervisorctl restart zope1 zope2

# pack your ZODB each Sunday and hence make it smaller and faster
[crontab_zeopack]
recipe = z3c.recipe.usercrontab
times = 0 1 * * 6 
command = ${buildout:directory}/bin/zeopack

# daily incremental ZODB backup, after packing occurs, this backup is full
[crontab_zodb_backup]
recipe = z3c.recipe.usercrontab
times = 0 2 * * *
command = ${buildout:directory}/bin/backup -q
